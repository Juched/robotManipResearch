//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Riptide
{
    [Serializable]
    public class TaskAlignmentMsg : Message
    {
        public const string k_RosMessageName = "riptide_msgs2/TaskAlignment";
        public override string RosMessageName => k_RosMessageName;

        public Std.HeaderMsg header;
        public bool visible;
        //  Relative position in pixels
        public Geometry.PointMsg relative_pos;
        public BoundingBoxMsg bbox;

        public TaskAlignmentMsg()
        {
            this.header = new Std.HeaderMsg();
            this.visible = false;
            this.relative_pos = new Geometry.PointMsg();
            this.bbox = new BoundingBoxMsg();
        }

        public TaskAlignmentMsg(Std.HeaderMsg header, bool visible, Geometry.PointMsg relative_pos, BoundingBoxMsg bbox)
        {
            this.header = header;
            this.visible = visible;
            this.relative_pos = relative_pos;
            this.bbox = bbox;
        }

        public static TaskAlignmentMsg Deserialize(MessageDeserializer deserializer) => new TaskAlignmentMsg(deserializer);

        private TaskAlignmentMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.visible);
            this.relative_pos = Geometry.PointMsg.Deserialize(deserializer);
            this.bbox = BoundingBoxMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.visible);
            serializer.Write(this.relative_pos);
            serializer.Write(this.bbox);
        }

        public override string ToString()
        {
            return "TaskAlignmentMsg: " +
            "\nheader: " + header.ToString() +
            "\nvisible: " + visible.ToString() +
            "\nrelative_pos: " + relative_pos.ToString() +
            "\nbbox: " + bbox.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
