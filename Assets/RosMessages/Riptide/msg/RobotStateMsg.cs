//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Riptide
{
    [Serializable]
    public class RobotStateMsg : Message
    {
        public const string k_RosMessageName = "riptide_msgs2/RobotState";
        public override string RosMessageName => k_RosMessageName;

        public const float NO_READING = -1f;
        public Std.HeaderMsg header;
        public bool kill_switch_inserted;
        public bool aux_switch_inserted;
        public float robot_temperature;
        public float water_temperature;
        public bool peltier_active;

        public RobotStateMsg()
        {
            this.header = new Std.HeaderMsg();
            this.kill_switch_inserted = false;
            this.aux_switch_inserted = false;
            this.robot_temperature = 0.0f;
            this.water_temperature = 0.0f;
            this.peltier_active = false;
        }

        public RobotStateMsg(Std.HeaderMsg header, bool kill_switch_inserted, bool aux_switch_inserted, float robot_temperature, float water_temperature, bool peltier_active)
        {
            this.header = header;
            this.kill_switch_inserted = kill_switch_inserted;
            this.aux_switch_inserted = aux_switch_inserted;
            this.robot_temperature = robot_temperature;
            this.water_temperature = water_temperature;
            this.peltier_active = peltier_active;
        }

        public static RobotStateMsg Deserialize(MessageDeserializer deserializer) => new RobotStateMsg(deserializer);

        private RobotStateMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.kill_switch_inserted);
            deserializer.Read(out this.aux_switch_inserted);
            deserializer.Read(out this.robot_temperature);
            deserializer.Read(out this.water_temperature);
            deserializer.Read(out this.peltier_active);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.kill_switch_inserted);
            serializer.Write(this.aux_switch_inserted);
            serializer.Write(this.robot_temperature);
            serializer.Write(this.water_temperature);
            serializer.Write(this.peltier_active);
        }

        public override string ToString()
        {
            return "RobotStateMsg: " +
            "\nheader: " + header.ToString() +
            "\nkill_switch_inserted: " + kill_switch_inserted.ToString() +
            "\naux_switch_inserted: " + aux_switch_inserted.ToString() +
            "\nrobot_temperature: " + robot_temperature.ToString() +
            "\nwater_temperature: " + water_temperature.ToString() +
            "\npeltier_active: " + peltier_active.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
