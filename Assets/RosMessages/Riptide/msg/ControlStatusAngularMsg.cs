//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Riptide
{
    [Serializable]
    public class ControlStatusAngularMsg : Message
    {
        public const string k_RosMessageName = "riptide_msgs2/ControlStatusAngular";
        public override string RosMessageName => k_RosMessageName;

        public Std.HeaderMsg header;
        public ControlStatusMsg roll;
        public ControlStatusMsg pitch;
        public ControlStatusMsg yaw;

        public ControlStatusAngularMsg()
        {
            this.header = new Std.HeaderMsg();
            this.roll = new ControlStatusMsg();
            this.pitch = new ControlStatusMsg();
            this.yaw = new ControlStatusMsg();
        }

        public ControlStatusAngularMsg(Std.HeaderMsg header, ControlStatusMsg roll, ControlStatusMsg pitch, ControlStatusMsg yaw)
        {
            this.header = header;
            this.roll = roll;
            this.pitch = pitch;
            this.yaw = yaw;
        }

        public static ControlStatusAngularMsg Deserialize(MessageDeserializer deserializer) => new ControlStatusAngularMsg(deserializer);

        private ControlStatusAngularMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            this.roll = ControlStatusMsg.Deserialize(deserializer);
            this.pitch = ControlStatusMsg.Deserialize(deserializer);
            this.yaw = ControlStatusMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.roll);
            serializer.Write(this.pitch);
            serializer.Write(this.yaw);
        }

        public override string ToString()
        {
            return "ControlStatusAngularMsg: " +
            "\nheader: " + header.ToString() +
            "\nroll: " + roll.ToString() +
            "\npitch: " + pitch.ToString() +
            "\nyaw: " + yaw.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
