//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Riptide
{
    [Serializable]
    public class CalibrateAlignmentMsg : Message
    {
        public const string k_RosMessageName = "riptide_msgs2/CalibrateAlignment";
        public override string RosMessageName => k_RosMessageName;

        public bool surge_active;
        public bool sway_active;
        public bool heave_active;
        public string object_name;
        public string task_name;
        public bool heading_active;
        public double heading;
        public bool depth_active;
        public double depth;
        public short bbox_dim;
        public short bbox_control;
        public Geometry.PointMsg target_pos;

        public CalibrateAlignmentMsg()
        {
            this.surge_active = false;
            this.sway_active = false;
            this.heave_active = false;
            this.object_name = "";
            this.task_name = "";
            this.heading_active = false;
            this.heading = 0.0;
            this.depth_active = false;
            this.depth = 0.0;
            this.bbox_dim = 0;
            this.bbox_control = 0;
            this.target_pos = new Geometry.PointMsg();
        }

        public CalibrateAlignmentMsg(bool surge_active, bool sway_active, bool heave_active, string object_name, string task_name, bool heading_active, double heading, bool depth_active, double depth, short bbox_dim, short bbox_control, Geometry.PointMsg target_pos)
        {
            this.surge_active = surge_active;
            this.sway_active = sway_active;
            this.heave_active = heave_active;
            this.object_name = object_name;
            this.task_name = task_name;
            this.heading_active = heading_active;
            this.heading = heading;
            this.depth_active = depth_active;
            this.depth = depth;
            this.bbox_dim = bbox_dim;
            this.bbox_control = bbox_control;
            this.target_pos = target_pos;
        }

        public static CalibrateAlignmentMsg Deserialize(MessageDeserializer deserializer) => new CalibrateAlignmentMsg(deserializer);

        private CalibrateAlignmentMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.surge_active);
            deserializer.Read(out this.sway_active);
            deserializer.Read(out this.heave_active);
            deserializer.Read(out this.object_name);
            deserializer.Read(out this.task_name);
            deserializer.Read(out this.heading_active);
            deserializer.Read(out this.heading);
            deserializer.Read(out this.depth_active);
            deserializer.Read(out this.depth);
            deserializer.Read(out this.bbox_dim);
            deserializer.Read(out this.bbox_control);
            this.target_pos = Geometry.PointMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.surge_active);
            serializer.Write(this.sway_active);
            serializer.Write(this.heave_active);
            serializer.Write(this.object_name);
            serializer.Write(this.task_name);
            serializer.Write(this.heading_active);
            serializer.Write(this.heading);
            serializer.Write(this.depth_active);
            serializer.Write(this.depth);
            serializer.Write(this.bbox_dim);
            serializer.Write(this.bbox_control);
            serializer.Write(this.target_pos);
        }

        public override string ToString()
        {
            return "CalibrateAlignmentMsg: " +
            "\nsurge_active: " + surge_active.ToString() +
            "\nsway_active: " + sway_active.ToString() +
            "\nheave_active: " + heave_active.ToString() +
            "\nobject_name: " + object_name.ToString() +
            "\ntask_name: " + task_name.ToString() +
            "\nheading_active: " + heading_active.ToString() +
            "\nheading: " + heading.ToString() +
            "\ndepth_active: " + depth_active.ToString() +
            "\ndepth: " + depth.ToString() +
            "\nbbox_dim: " + bbox_dim.ToString() +
            "\nbbox_control: " + bbox_control.ToString() +
            "\ntarget_pos: " + target_pos.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
